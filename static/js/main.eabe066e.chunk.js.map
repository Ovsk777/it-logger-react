{"version":3,"sources":["actions/types.js","actions/logActions.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","PreLoader","Logs","logs","loading","getLogs","useEffect","length","map","protoTypes","PropTypes","object","isRequired","func","state","AddBtn","getTechs","techs","undefined","t","firstName","lastName","firstNam","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updLog","AddTechModal","setFirstName","setLastName","console","TechItem","initialState","error","action","filter","combineReducers","logReducer","techReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eabe066e.chunk.js","sourcesContent":["export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","\r\nimport { SEARCH_LOGS ,GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG,DELETE_LOG, SET_CURRENT,CLEAR_CURRENT, UPDATE_LOG } from './types'\r\n// export const getLogs = () => {\r\n//     return async dispatch => {\r\n// setLoading();\r\n// const res = await fetch('/logs');\r\n// const data = await res.json();\r\n// dispatch({\r\n//     type: GET_LOGS,\r\n//     payload: data\r\n// });\r\n//     }   \r\n// }\r\n\r\nexport const getLogs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/logs');\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport const addLog = (log) => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch('/logs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    })\r\n  }\r\n\r\n}\r\nexport const deleteLog = (id) => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    await fetch(`/logs/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport const updateLog = log => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs/${log.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(log),\r\n      headers : {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport const searchLogs = (text) => async dispatch => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport const setCurrent = log => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log\r\n  }\r\n}\r\n\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT\r\n  }\r\n}\r\n\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  }\r\n}","import React,{ useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { searchLogs } from '../../actions/logActions'\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n    const text = useRef('')\r\n    const onChange = e => {\r\n        searchLogs(text.current.value)\r\n    }\r\n    return (\r\n        <nav style = {{ marginBottom: '30px' }} className=\"blue\">\r\n            <div className=\"nav-wrapper\">\r\n                <form>\r\n                    <div className=\"input-field\">\r\n                        <input id=\"search\" type=\"search\" placeholder='Search Logs...' ref={text}\r\n                        onChange={onChange}/>\r\n                        <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\r\n                        <i className=\"material-icons\">close</i>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    searchLogs: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, { searchLogs })(SearchBar)\r\n","import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { deleteLog, setCurrent } from '../../actions/logActions'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nconst Logitem = ({ log, deleteLog, setCurrent }) => {\r\n    const onDelete = () => {\r\n        deleteLog(log.id);\r\n        M.toast({ html: 'Log Deleted' })\r\n    }\r\n    return (\r\n        <li className=\"collection-item\">\r\n            <div>\r\n                <a href='#edit-log-modal' className={`modal-trigger ${log.attention ? 'red-text' : 'blue-text'}`} onClick={() => setCurrent(log)}>{log.message}</a>\r\n                <br />\r\n                <span className='grey-text'>\r\n                    <span className=\"black-text\">ID #{log.id} </span>\r\n                last updated by\r\n                <span className=\"black-text\"> {log.tech}</span> on <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\r\n                </span>\r\n                <a href=\"#!\" onClick={onDelete} className=\"secondary-content\"><i className=\"material-icons grey-text\">delete</i></a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\nLogitem.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    deleteLog: PropTypes.func.isRequired,\r\n    setCurrent: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, { deleteLog, setCurrent })(Logitem);\r\n","import React from 'react'\r\n\r\nconst PreLoader = () => {\r\n    return (\r\n        <div className=\"progress blue lighten-4\">\r\n            <div className=\"indeterminate blue\"></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreLoader\r\n","import React, {useEffect} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Logitem from './LogItem';\r\nimport PreLoader from '../layout/Preloader';\r\nimport PropTypes from 'prop-types'\r\nimport {  getLogs } from '../../actions/logActions'\r\n\r\nconst Logs = ({ log: { logs, loading}, getLogs }) => {\r\n\r\n    useEffect(() => {\r\n        getLogs();\r\n        //eslint-disable-next-line\r\n    }, [])                      //empty array as we want it to run once and no re-rendering required\r\n\r\n\r\n    if(loading || logs === null){\r\n        return <PreLoader />\r\n    }\r\n    return (\r\n        <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n                <h4 className=\"center\">\r\n                    System Logs\r\n                </h4>\r\n            </li>\r\n            {!loading && logs.length=== 0 ? (<p>No logs to show..</p>) : \r\n            (logs.map(log => <Logitem log={log} key={log.id}/>))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nLogs.protoTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    getLogs: PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = state => ({\r\n    log: state.log\r\n})\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React from 'react'\r\n\r\nconst AddBtn = () => {\r\n    return (\r\n        <div className=\"fixed-action-btn\">\r\n            <a href=\"#add-log-modal\" className=\"btn-floating btn-large blue darken-2 modal-trigger\">\r\n            <i className=\"large material-icons\">add</i>\r\n            </a>\r\n           <ul>\r\n               <li>\r\n                   <a href=\"#tech-list-modal\" className=\"btn-floating green modal-trigger\">\r\n                       <i className=\"material-icons\">person</i>\r\n                   </a>\r\n               </li>\r\n               <li>\r\n                   <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\r\n                       <i className=\"material-icons\">person_add</i>\r\n                   </a>\r\n               </li>\r\n           </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default AddBtn;\r\n","import { GET_TECHS, ADD_TECH, DELETE_TECH, SET_LOADING, TECHS_ERROR } from './types'\r\n\r\n\r\nexport const getTechs = () => async dispatch => {\r\n    try {\r\n      setLoading();\r\n      const res = await fetch('/techs');\r\n      const data = await res.json();\r\n      \r\n      dispatch({\r\n        type: GET_TECHS,\r\n        payload: data\r\n      });\r\n  \r\n    } catch (err) {\r\n      dispatch({\r\n        type: TECHS_ERROR,\r\n        payload: err.response.statusText\r\n      })\r\n    }\r\n  }\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n      type: SET_LOADING\r\n    }\r\n  }","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getTechs } from '../../actions/techActions' \r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n    \r\n    useEffect(()=> {\r\n        getTechs();\r\n    //eslint-disable-next-line\r\n    },[])\r\n    return (\r\n        !loading && techs!== undefined && techs.map(t => <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n{t.firstNam} {t.lastName}\r\n        </option>)\r\n    )\r\n}\r\n\r\nTechSelectOptions.propTypes = {\r\n tech: PropTypes.object.isRequired,\r\n getTechs: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n tech: state.tech\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions)\r\n","import React, { useState } from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { addLog } from '../../actions/logActions'\r\nimport TechSelectOptions from '../techs/TechSelectOptions'\r\n\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false)\r\n    const [tech, setTech] = useState('');\r\n    const onSubmit = () => {\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: \" Please enter a message and tech\" })\r\n        }\r\n        else {\r\n            const newLog = {\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n            }\r\n\r\n            addLog(newLog);\r\n            M.toast({ html: `Log added by ${tech}` });\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n            <div className=\"modal-content\">\r\n                <h4>Enter System Log</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name='message' value={message} onChange={e => setMessage(e.target.value)} />\r\n                        <label htmlFor=\"message\" className=\"active\">\r\n                            Log message\r\n                    </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <select name=\"tech\" value={tech} className=\"browser-default\" onChange={e => setTech(e.target.value)}>\r\n                            <option value=\"\" disabled>Select tech</option>\r\n                            <TechSelectOptions />\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <p>\r\n                            <label>\r\n                                <input type=\"checkbox\" className=\"filled-in\" checked={attention} value={attention} onChange={e => setAttention(!attention)} />\r\n                                <span>Needs attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect waves-green btn\">Enter</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nAddLogModal.propTypes = {\r\n    addLog: PropTypes.func.isRequired\r\n}\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n};\r\n\r\n\r\n\r\nexport default connect(null, { addLog })(AddLogModal)\r\n","import React, { useState, useEffect } from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { updateLog } from '../../actions/logActions'\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false)\r\n    const [tech, setTech] = useState('');\r\n    \r\n    useEffect(() => {\r\n        if(current){\r\n            setMessage(current.message)\r\n            setAttention(current.attention)\r\n            setTech(current.tech)\r\n        }\r\n    }, [current])\r\n\r\n    const onSubmit = () => {\r\n        if(message === '' || tech === ''){\r\n            M.toast({ html: \" Please enter a message and tech\" })\r\n        }\r\n        else{\r\n        const updLog = {\r\n            id: current.id,\r\n            message,\r\n            attention,\r\n            tech,\r\n            date: new Date()\r\n        }    \r\n        updateLog(updLog);\r\n        M.toast({ html: `Log updated by ${tech}` })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\r\n            <div className=\"modal-content\">\r\n                <h4>Enter System Log</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name='message' value={message} onChange={e => setMessage(e.target.value)} />\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <select name=\"tech\" value={tech} className=\"browser-default\" onChange={e => setTech(e.target.value)}>\r\n                            <option value=\"\" disabled>Select tech</option>\r\n                            <option value=\"John Doe\">John Doe</option>\r\n                            <option value=\"Sam Smith\">Sam Smith</option>\r\n                            <option value=\"Roy Keane\">Roy Keane</option>\r\n                            <option value=\"Cris Ronaldo\">Cris Ronaldo</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <p>\r\n                            <label>\r\n                                <input type=\"checkbox\" className=\"filled-in\" checked={attention} value={attention} onChange={e => setAttention(!attention)} />\r\n                                <span>Needs attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect waves-green btn\">Enter</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n};\r\nEditLogModal.propTypes = {\r\n    current: PropTypes.object,\r\n    updateLog: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    current: state.log.current\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateLog })(EditLogModal)\r\n","\r\nimport React, { useState } from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\n\r\nconst AddTechModal = () => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState(false)\r\n        const onSubmit = () => {\r\n        if(firstName === '' || lastName === ''){\r\n            M.toast({ html: \" Please enter First Name and Last name\" })\r\n        }\r\n        else{\r\n            console.log(firstName, lastName)\r\n            setFirstName('');\r\n            setLastName('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div id=\"add-tech-modal\" className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <h4>New Technician</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name='firstName' value={firstName} onChange={e => setFirstName(e.target.value)} />\r\n                        <label htmlFor=\"firstName\" className=\"active\">\r\n                            First Name\r\n                    </label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" name='last' value={lastName} onChange={e => setLastName(e.target.value)} />\r\n                        <label htmlFor=\"lastName\" className=\"active\">\r\n                            Last name\r\n                    </label>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect waves-green btn\">Enter</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTechModal\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TechItem = ({tech}) => {\r\n    return (\r\n        <li className=\"collection-item\">\r\n            <div>\r\n                {tech.firstName} {tech.lastName}\r\n                <a href=\"#!\" className=\"secondary-content\">\r\n                    <i className=\"material-icons grey-text\">delete</i>\r\n                </a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nTechItem.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default TechItem\r\n","import React, {useState, useEffect} from 'react'\r\nimport TechItem from './TechItem'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getTechs } from '../../actions/techActions'\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n\r\n    useEffect(() => {\r\n        getTechs();\r\n        //eslint-disable-next-line\r\n    }, [])                      //empty array as we want it to run once and no re-rendering required\r\n\r\n    return (\r\n       <div id=\"tech-list-modal\" className=\"modal\">\r\n           <div className=\"modal-content\">\r\n               <h4>Technician List</h4>\r\n               <ul className=\"collection\">\r\n                   {!loading && techs ?. techs.map(tech => <TechItem tech={tech} key={tech.id}/>)}\r\n               </ul>\r\n           </div>\r\n\r\n       </div>\r\n        )\r\n}\r\n\r\nTechListModal.propTypes = {\r\n    tech: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tech: state.tech,\r\n    getTechs: PropTypes.func.isRequired\r\n})\r\nexport default connect(mapStateToProps, { getTechs })(TechListModal)\r\n","import { act } from 'react-dom/test-utils';\r\nimport { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, SEARCH_LOGS } from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    logs: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n\r\n        case GET_LOGS:\r\n            return {\r\n                ...state,\r\n                logs: action.payload,\r\n                loading: false\r\n            }\r\n        case ADD_LOG:\r\n            return {\r\n                ...state,\r\n                logs: [...state.logs, action.payload],\r\n                loading: false\r\n            }\r\n        case DELETE_LOG:\r\n            return {\r\n                ...state,\r\n                logs: state.logs.filter(log => log.id !== action.payload),\r\n                loading: false\r\n            }\r\n        case UPDATE_LOG:\r\n            return {\r\n                ...state,\r\n                logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log)\r\n            }\r\n        case SEARCH_LOGS:\r\n            return{\r\n                ...state,\r\n                logs: action.payload\r\n            }    \r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            }\r\n        case LOGS_ERROR:\r\n            console.error(action.payload);\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport logReducer from './logReducer'\r\nimport techReducer from './logReducer'\r\n\r\nexport default combineReducers({\r\n    log: logReducer,\r\n    tech: techReducer\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk  from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store","import React, { Fragment, useEffect } from 'react';\nimport './App.css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from \"./components/layout/AddBtn\";\nimport AddLogModal from './components/logs/AddLogModal'\nimport EditLogModal from './components/logs/EditLogModal'\nimport AddTechModal from './components/techs/AddTechModal'\nimport TechListModal from './components/techs/TechListModal'\nimport { Provider } from \"react-redux\";\nimport store from './store'\nconst App = () => {\n  useEffect(() => {\n    M.AutoInit();         //Initialize material javascript\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className=\"container\">\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}